buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = 'http://files.minecraftforge.net/maven' }
        maven { url = 'http://repo.spongepowered.org/maven' }
        maven { url = 'https://jitpack.io' }
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.4'
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.1-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
    }
}

repositories {
    jcenter()
    mavenCentral()
    maven { url = 'http://repo.spongepowered.org/maven/' }
    maven { url = 'https://jitpack.io' }
}

plugins {
    id "org.sonarqube" version "3.0"
}

apply plugin: 'java'
apply plugin: 'com.github.johnrengelman.shadow'

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'

version = '1.0.1'
group = 'de.timmi6790.mcmod'
archivesBaseName = 'RandomMineplexMod'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

dependencies {
    // Enabled me only for build
    annotationProcessor 'org.spongepowered:mixin:0.7.11-SNAPSHOT'
    compile 'org.spongepowered:mixin:0.7.11-SNAPSHOT'

    compile 'com.github.ben-manes.caffeine:caffeine:2.8.5'
    compile 'org.reflections:reflections:0.9.12'

    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'

    implementation 'com.github.Timmi6790:Commons:4e06ba7769'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.0'
    testImplementation 'org.assertj:assertj-core:3.19.0'
    testImplementation 'org.mockito:mockito-core:3.5.13'
    testImplementation 'org.mockito:mockito-inline:3.5.13'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.5.13'
}

minecraft {
    version = '1.8.9-11.15.1.2318-1.8.9'
    runDir = 'run'
    mappings = 'stable_22'
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }

    rename '(.+_at.cfg)', 'META-INF/$1'
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, "mixins.randomMineplexMod.refmap.json"
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
    }
}

configurations {
    embed
    compile.extendsFrom(embed)
}

jar {
    configurations.embed.each { dep ->
        from(project.zipTree(dep)) {
            exclude "META-INF", "META-INF/**"
        }

        from(project.zipTree(dep)) {
            include "META-INF/services", "META-INF/services/"
        }
    }

    manifest.attributes(
            'MixinConfigs': 'mixins.randomMineplexMod.json',
            'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
            'FMLCorePluginContainsFMLMod': "true",
            'ForceLoadAsMod': 'true',
            'FMLCorePlugin': 'de.timmi6790.mpmod.mixins.MixinLoader',
            'FMLAT': 'randomMineplexMod_at.cfg',
    )
}

shadowJar {
    classifier ''
    exclude 'LICENSE.txt', 'dummyThing'
}

artifacts {
    archives jar
    archives shadowJar
}

sonarqube {
    properties {
        property "sonar.projectKey", "RandomMineplexMod"
        property "sonar.host.url", "https://sonarcube.timmi6790.de"
    }
}
